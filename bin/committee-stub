#!/usr/bin/env ruby

require 'optparse'
require 'yaml'

require_relative "../lib/committee"

args = ARGV.dup
options = { port: 9292, tolerant: false }
opt_parser = OptionParser.new do |opts|
  opts.banner = "Usage: rackup [options] [JSON Schema file]"

  opts.separator ""
  opts.separator "Options:"

  opts.on_tail("-h", "-?", "--help", "Show this message") {
    puts opts
    exit
  }

  opts.on("-t", "--tolerant", "don't perform request/response validations") {
    options[:tolerant] = true
  }

  opts.on("-p", "--port PORT", "use PORT (default: 9292)") { |port|
    options[:port] = port
  }
end
opt_parser.parse!(args)

unless args.count == 1
  puts opt_parser.to_s
  exit
end

schema = ::YAML.load(File.read(args[0]))

app = Rack::Builder.new {
  unless options[:tolerant]
    use Committee::Middleware::RequestValidation, schema: schema
    use Committee::Middleware::ResponseValidation, schema: schema
  end

  use Committee::Middleware::Stub, schema: schema
  run lambda { |_|
    [404, {}, ["Not found"]]
  }
}

Rack::Server.start(app: app, Port: options[:port])
